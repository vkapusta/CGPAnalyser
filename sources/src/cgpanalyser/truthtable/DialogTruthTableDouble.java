/*
 * To change this license header1, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cgpanalyser.truthtable;

import com.quew8.ttg.MainController;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import org.jdesktop.swingx.JXTable;

/**
 *
 * @author Vlastimil Kapusta, xkapus02@stud.fit.vutbr.cz
 */
public class DialogTruthTableDouble extends javax.swing.JDialog {

   private List<String> header1, header2;
   private List<List<String>> data1, data2;

   /**
    * Creates new form DialogTruthTable
    */
   public DialogTruthTableDouble(java.awt.Frame parent, boolean modal, String[] expression, int generation1, int generation2) {
      super(parent, modal);
      String ex1 = expression[0], ex2 = expression[1];

      data1 = new ArrayList<>();
      header1 = new ArrayList<>();
      String usedInputs1 = TruthTableUtils.getUsedInputs(ex1);
      ex1 = "O = " + ex1 + "[" + usedInputs1 + "]";

      data2 = new ArrayList<>();
      header2 = new ArrayList<>();
      String usedInputs2 = TruthTableUtils.getUsedInputs(ex2);
      ex2 = "O = " + ex2 + "[" + usedInputs2 + "]";

      //System.out.println("expression" + expression);
      MainController mC = new MainController();
      try {
         mC.generateTT(ex1, header1, data1);
         mC.generateTT(ex2, header2, data2);
      } catch (RuntimeException e) {
         System.out.println(e.getMessage());
      }

      //TruthTableUtils.printList(header1);
      //TruthTableUtils.print2DList(data1);
      initComponents();
      centerTable(tableTruth);
      centerTable(tableTruth1);

      setTitle("Truth table comparison | Generations " + generation1 + ", " + generation2);
      pack();
      setVisible(true);

      System.out.println(data1.get(1).get(0));

   }

   private void centerTable(JXTable table) {
      centerTableHeader(table);
      for (int i = 0; i < table.getColumnCount(); i++) {
         centerCol(table, i);
      }
   }

   /**
    * vycentruje hlavicku tabulky
    *
    * @param table Tabulka pro centrovani hlavicky
    */
   private void centerTableHeader(JXTable table) {
      TableCellRenderer rendererFromHeader = table.getTableHeader().getDefaultRenderer();
      JLabel headerLabel = (JLabel) rendererFromHeader;
      headerLabel.setHorizontalAlignment(JLabel.CENTER);
   }

   /**
    * vycentrovani sloupce tabulky
    *
    * @param col sloupec
    */
   private void centerCol(JXTable table, int col) {
      DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
      centerRenderer.setHorizontalAlignment(JLabel.CENTER);
      table.getColumnModel().getColumn(col).setCellRenderer(centerRenderer);
   }

   public Component getCompareCellRenderer(Component c, int row, int column) {
      if (header1.size() == header2.size())
         if (column == header1.size() - 1)
            if (data1.get(row).get(column).equals(data2.get(row).get(column)))
               c.setBackground(new Color(144, 238, 144));
            else
               c.setBackground(new Color(255, 106, 106));
      return c;
   }

   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
    * this method is always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jScrollPane2 = new javax.swing.JScrollPane();
      tableTruth = new org.jdesktop.swingx.JXTable() {
         @Override
         public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
            Component c = super.prepareRenderer(renderer, row, column);
            return getCompareCellRenderer(c, row, column);
         }
      };
      jScrollPane3 = new javax.swing.JScrollPane();
      tableTruth1 = new org.jdesktop.swingx.JXTable() {
         @Override
         public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
            Component c = super.prepareRenderer(renderer, row, column);
            return getCompareCellRenderer(c, row, column);
         }
      };

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      setTitle("Truth table comparison");

      tableTruth.setModel(new ListTableModel(header1, data1));
      tableTruth.setDoubleBuffered(true);
      tableTruth.setEditable(false);
      tableTruth.setEnabled(false);
      tableTruth.setRowSelectionAllowed(false);
      tableTruth.setSortable(false);
      jScrollPane2.setViewportView(tableTruth);

      tableTruth1.setModel(new ListTableModel(header2, data2));
      tableTruth1.setDoubleBuffered(true);
      tableTruth1.setEditable(false);
      tableTruth1.setEnabled(false);
      tableTruth1.setRowSelectionAllowed(false);
      tableTruth1.setSortable(false);
      jScrollPane3.setViewportView(tableTruth1);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(12, 12, 12)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
            .addGap(6, 6, 6)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
            .addGap(12, 12, 12))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(12, 12, 12)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
               .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE))
            .addGap(12, 12, 12))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(DialogTruthTableDouble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(DialogTruthTableDouble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(DialogTruthTableDouble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(DialogTruthTableDouble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>
      //</editor-fold>

      /* Create and display the dialog */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            DialogTruthTableDouble dialog = new DialogTruthTableDouble(new javax.swing.JFrame(), true, null, 0, 0);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
               @Override
               public void windowClosing(java.awt.event.WindowEvent e) {
                  System.exit(0);
               }
            });
            dialog.setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   private org.jdesktop.swingx.JXTable tableTruth;
   private org.jdesktop.swingx.JXTable tableTruth1;
   // End of variables declaration//GEN-END:variables

}
